// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Auth.Data;

#nullable disable

namespace Project.Auth.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220309200713_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.Auth.Domain.User", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubjectId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            IsActive = true,
                            Password = "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=",
                            Username = "u1"
                        },
                        new
                        {
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7",
                            IsActive = true,
                            Password = "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg=",
                            Username = "u2"
                        });
                });

            modelBuilder.Entity("Project.Auth.Domain.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId", "ClaimType");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "given_name",
                            ClaimValue = "Kamran",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "family_name",
                            ClaimValue = "Sadin",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "address",
                            ClaimValue = "Iran, Golestan, Gonbade Kavous",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "role",
                            ClaimValue = "admin",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "role",
                            ClaimValue = "manager",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "subscriptionlevel",
                            ClaimValue = "Gold",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "country",
                            ClaimValue = "iran",
                            SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "given_name",
                            ClaimValue = "John",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "family_name",
                            ClaimValue = "Doe",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "address",
                            ClaimValue = "Iran, Tehran",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "role",
                            ClaimValue = "user",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "role",
                            ClaimValue = "manager",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "subscriptionlevel",
                            ClaimValue = "Silver",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "country",
                            ClaimValue = "USA",
                            SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7"
                        });
                });

            modelBuilder.Entity("Project.Auth.Domain.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId", "LoginProvider")
                        .IsUnique();

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Project.Auth.Domain.UserClaim", b =>
                {
                    b.HasOne("Project.Auth.Domain.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Auth.Domain.UserLogin", b =>
                {
                    b.HasOne("Project.Auth.Domain.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Auth.Domain.User", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");
                });
#pragma warning restore 612, 618
        }
    }
}
